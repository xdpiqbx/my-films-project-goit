{"version":3,"sources":["webpack:///./javascript/fetchMovie.js","webpack:///./javascript/api.js","webpack:///./index.js"],"names":["KEY","BASE_URL","createUrlForFullInfo","movie_id","fetchMovie","url","fetch","then","response","json","refs","modal","document","querySelector","renderFullInfo","id","data","innerHTML","poster_path","name","title","vote_average","vote_count","popularity","original_title","original_name","genres","map","genre","join","renderGenres","overview","renderModalContent","addEventListener","classList","add","wrapBtns","toWatched","toQueue","addUnicIdToLocalStorage","catch","e","console","log","nameInStorage","IdFromStorage","localStorage","getItem","fromStorage","currentId","indexOf","isIdExistInLocalStorage","setItem","page","mainWrapper","pagination","addedToWatched","addedToQueue","renderWatchedOrQueue","movieIds","split","movieData","insertAdjacentHTML","renderMoviesListItem","results","event","remove","path","dataset"],"mappings":"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","file":"main.941ef9b1c2ad0e8dd368.js","sourcesContent":["// Ссылка на документацию для запроса на список самых популярных фильмов на сегодня для создания коллекции на главной странице:\r\n//\thttps://developers.themoviedb.org/3/trending/get-trending\r\n//  https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\r\n\r\n// Ссылка на документацию для запроса кинофильма по ключевому слову на главное странице:\r\n// https://developers.themoviedb.org/3/search/search-movies\r\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\r\n\r\n// Ссылка на документацию для запроса у полной информации о кинофильме для страницы кинофильма:\r\n// https://developers.themoviedb.org/3/movies/get-movie-details\r\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\r\n\r\n\r\n/*\r\n    ++++ FT-07 Реализовать подгрузку популярных фильмов на главную (первую) страницу ++++\r\n    FT-09 При переходе на каждую страницу отрисосывать соответствующую часть фильмов ----------\r\n    ++++ FT-18 По нажатию на кнопку \"Add to watched\" фильм добавляется в просмотренные фильмы текущего пользователя (local-storage)\r\n    ++++ FT-19 По нажатию на кнопку \"Add to queue\" фильм добавляется в очередь текущего пользователя (local-storage)\r\n    ++++ FT-14 По нажатию на кнопку \"Watched\" (вверху на главной) показываются просмотренные фильмы пользователя\r\n    ++++ FT-15 По нажатию на кнопку \"Queue\" (вверху на главной) показываются фильмы добавленные в очередь пользователя\r\n*/\r\n\r\nconst KEY = \"9fba788361f0940b39e64c54ec217196\"\r\nconst DEFAULT_PAGE = 1\r\nconst BASE_URL = \"https://api.themoviedb.org/3/\"\r\nconst LANGUAGE = 'en-US'\r\n\r\nexport const createUrlForTrending = (page = DEFAULT_PAGE) => {\r\n    return `${BASE_URL}trending/all/day?api_key=${KEY}&page=${page}&adult=false`\r\n}\r\n\r\nexport const createUrlSearchByKeyword = (query, page = DEFAULT_PAGE) => {\r\n    return `${BASE_URL}search/movie?api_key=${KEY}&language=${LANGUAGE}&page=${page}&include_adult=false&query=${query}`\r\n}\r\n\r\nexport const createUrlForFullInfo = (movie_id) => {\r\n    return `${BASE_URL}movie/${movie_id}?api_key=${KEY}&language=${LANGUAGE}`\r\n}\r\n\r\nexport function fetchMovie(url){\r\n    return fetch(url).then(response => response.json())\r\n}\r\n","import {\r\n    fetchMovie,\r\n    createUrlForFullInfo\r\n} from './fetchMovie'\r\n\r\n/*\r\n    Тут по id получаю полную информацию о фильме для модалки\r\n    И формирую модалку со всеми кнопками и т.п.\r\n*/\r\n\r\nconst refs = {\r\n    modal: document.querySelector('.modal')\r\n}\r\n\r\nexport const renderFullInfo = (id) => {\r\n   fetchMovie(createUrlForFullInfo(id))\r\n        .then(data=>{\r\n            refs.modal.innerHTML = renderModalContent(data)\r\n            const close = document.querySelector('.js-close')\r\n            close.addEventListener('click', ()=>{\r\n                refs.modal.classList.add('hide')\r\n            })\r\n            data = null\r\n            return id\r\n        })\r\n        .then((id)=>{\r\n            const wrapBtns = document.querySelector('.js-btns-add')\r\n            const toWatched = wrapBtns.querySelector('.to-watched')\r\n            const toQueue = wrapBtns.querySelector('.to-queue')\r\n\r\n            toWatched.addEventListener('click', () => addUnicIdToLocalStorage('toWatched', id))\r\n            toQueue.addEventListener('click', () => addUnicIdToLocalStorage('toQueue', id))\r\n        })\r\n        .catch(e=>{\r\n            console.log(e);\r\n        })\r\n}\r\n\r\nfunction renderGenres(data){\r\n    return `<span>${data.genres.map(genre => genre.name).join(', ')}</span>`\r\n}\r\n\r\nfunction addUnicIdToLocalStorage(nameInStorage, id){\r\n    let IdFromStorage = localStorage.getItem(nameInStorage)\r\n    IdFromStorage = isIdExistInLocalStorage(IdFromStorage, id)\r\n    localStorage.setItem(nameInStorage, IdFromStorage)\r\n}\r\n\r\nfunction isIdExistInLocalStorage(fromStorage, currentId){\r\n    if(!fromStorage){\r\n        fromStorage = currentId\r\n    }else if(fromStorage.indexOf(currentId) < 0){\r\n        fromStorage += ` ${currentId}`\r\n    }\r\n    return fromStorage\r\n}\r\n\r\nfunction renderModalContent(data){\r\n    return `\r\n        <div>\r\n            <img width='300' src=\"https://image.tmdb.org/t/p/w500/${data.poster_path}\"/>\r\n        </div>\r\n        <div>\r\n            <h3>${data.name || data.title}</h3>\r\n            <p>vote / votes ----- ${data.vote_average} / ${data.vote_count}</p>\r\n            <p>Popularity ${data.popularity}</p>\r\n            <p>Original title: ${data.original_title || data.original_name }</p>\r\n            <p>Genre: ${renderGenres(data)}</p>\r\n            <h4>About</h4>\r\n            <p>${data.overview}</p>\r\n            <div class=\"js-btns-add\">\r\n                <button class=\"to-watched\">Add to watched</button>                    \r\n                <button class=\"to-queue\">Add to queue</button>\r\n                <button class='js-close'>Close</button>\r\n            </div>\r\n        </div>\r\n    `\r\n}","import {\r\n    fetchMovie,\r\n    createUrlForTrending,\r\n    createUrlSearchByKeyword,\r\n    createUrlForFullInfo\r\n} from './javascript/fetchMovie'\r\n\r\nimport {renderFullInfo} from './javascript/api'\r\n\r\nimport './styles.scss';\r\n\r\nconst refs = {\r\n    mainWrapper: document.querySelector('.js-films-wrapper-list'),\r\n    pagination: document.querySelector('.js-pages'),\r\n    modal: document.querySelector('.modal'),\r\n    addedToWatched: document.querySelector('.added-to-watched'),\r\n    addedToQueue: document.querySelector('.added-to-queue')\r\n}\r\n\r\nfetchMovie(createUrlForTrending())\r\n    .then(data => {\r\n        const films = data.results\r\n\r\n        films.map(movieData => refs.mainWrapper.insertAdjacentHTML(\"beforeend\", renderMoviesListItem(movieData)))\r\n\r\n        refs.mainWrapper.addEventListener('click', event => {\r\n            refs.modal.classList.remove('hide')\r\n            const id = event.path[1].dataset.id\r\n            if(id){\r\n                renderFullInfo(+id)\r\n            }\r\n        })\r\n    }\r\n)\r\n\r\nrefs.addedToWatched.addEventListener('click', event => {\r\n    refs.modal.classList.add('hide')\r\n    const movieIds = localStorage.getItem('toWatched')\r\n    renderWatchedOrQueue(movieIds)\r\n})\r\n\r\nrefs.addedToQueue.addEventListener('click', event => {\r\n    refs.modal.classList.add('hide')\r\n    const movieIds = localStorage.getItem('toQueue')\r\n    renderWatchedOrQueue(movieIds)\r\n})\r\n\r\nfunction renderWatchedOrQueue(movieIds){\r\n    refs.mainWrapper.innerHTML = ''\r\n    movieIds.split(' ').map( id => {\r\n        fetchMovie(createUrlForFullInfo(id))\r\n        .then(movieData => {\r\n            refs.mainWrapper.insertAdjacentHTML(\"beforeend\", renderMoviesListItem(movieData))\r\n        })\r\n    })\r\n}\r\n\r\nfunction renderMoviesListItem(data){\r\n    return `\r\n        <li class=\"js-films-wrapper-list__item\" data-id=\"${data.id}\">\r\n            <img width=\"200px\" src=\"https://image.tmdb.org/t/p/w500/${data.poster_path}\"/>\r\n            <p>${data.title || data.name}</p>\r\n        </li>\r\n    `\r\n}"],"sourceRoot":""}